//import peasy.*;   
//PeasyCam cam;  
int FACE_DIV = 15;
int FACE_NODE = 18; 
PVector[][] face_pt = new PVector[FACE_DIV][FACE_NODE];

float[] front1 = {1, 0.97, 0.94, 0.88, 0.84, 0.79,
                  0.74, 0.72, 0.7, 0.7, 0.72, 0.84,
                  0.93, 0.98, 1, 0.96, 0.94, 0.92};
              
float[] front2 = {1, 0.97, 0.96, 0.95, 0.93, 0.89,
                  0.85, 0.83, 0.8, 0.79, 0.81, 0.92,
                  0.98, 1, 0.99, 0.96, 0.94, 0.92};              
              
float[] front3 = {1, 0.98, 0.98, 0.97, 0.96, 0.94,
                  0.9, 0.89, 0.86, 0.83, 0.87, 0.94,
                  0.99, 1, 0.98, 0.96, 0.92, 0.92};                    
              
float[] sides = {1, 0.98, 0.98, 0.98, 0.98, 0.96,
                0.93, 0.91, 0.89, 0.87, 0.89, 0.95,
                1, 1, 0.98, 0.96, 0.92, 0.92};
              
float[] back3 = {1, 1, 1, 1, 1, 1,
                 1, 1, 1, 1, 1, 1,
                 1, 1, 0.98, 0.96, 0.94, 0.92};            
              
float[] back2 = {1, 1.01, 1.03, 1.05, 1.07, 1.09,
                 1.1, 1.09, 1.08, 1.07, 1.05, 1.02,
                 1, 1, 1, 0.96, 0.94, 0.92};               
              
float[] back1 = {1, 1.02, 1.07, 1.12, 1.15, 1.16,
                 1.17, 1.16, 1.15, 1.15, 1.13, 1.11,
                 1.08,1.05,1,0.96,0.94,0.92};   
                  
float[] back0 = {1, 1.02, 1.07, 1.12, 1.15, 1.16,
                 1.17, 1.16, 1.15, 1.15, 1.13, 1.11,
                 1.08, 1.05, 1, 0.96, 0.94, 0.92};               
              
float[][] face_r = {front1, front2, front3, sides, 
                    back3, back2, back1, back0, back1, 
                    back2, back3, sides, front3, front2, front1};

void setup(){
  size(500, 500, P3D); 
  noLoop();
  
//  cam = new PeasyCam(this, 300); 
//  cam.setMinimumDistance(50);  
//  cam.setMaximumDistance(500);

}

void draw(){
  
  //background(100);
  PVector sPos = new PVector(width/2,height/2);

  for(int i=0; i<FACE_DIV; i++){
    face_pt[i] = face_set((i+1)*PI/8,face_r[i]);
  }
  
  
  pushMatrix();
  translate(sPos.x, sPos.y,0);
  //rotateX(-PI/2);
  //rotateY(-PI/2);
  
  strokeWeight(3);

  //mesh
  beginShape(TRIANGLE_STRIP);
  for(int i=0; i<FACE_DIV; i++){
    for(int j=0; j<FACE_NODE; j++){
      if(i==FACE_DIV-1){
        vertex(face_pt[i][j].x,face_pt[i][j].y,face_pt[i][j].z);
        vertex(face_pt[0][j].x,face_pt[0][j].y,face_pt[0][j].z);
      }else{        
        vertex(face_pt[i][j].x,face_pt[i][j].y,face_pt[i][j].z);
        vertex(face_pt[i+1][j].x,face_pt[i+1][j].y,face_pt[i+1][j].z);
      }
    }
  }
  endShape(CLOSE);

  popMatrix(); 
}



PVector[] face_set(float angle, float r[]){
  
  float radius = 90;
  int NODE_NUM = 18;
  float step, x1, x2, x3;
  PVector[] pt = new PVector[NODE_NUM];
  
  for(int i=0; i<NODE_NUM; i++){
    float t = (1.0/(NODE_NUM-1))*i;
    x1 = 3 * NODE_NUM/2 * t * pow((1-t),2);
    x2 = 3 * NODE_NUM/2 * pow(t,2) * (1-t);
    x3 = (NODE_NUM-1) * pow(t,3);
    step = x1 + x2 + x3;
    
    float thita = PI - step * PI/(NODE_NUM-1);
    float phi = angle;
    float z = radius * r[i] * sin(thita) * cos(phi);
    float x = radius * r[i] * sin(thita) * sin(phi);
    float y = radius * r[i] * cos(thita);
  
    pt[i] = new PVector(x,y,z);
  }
  return pt;
}
