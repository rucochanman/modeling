PVector center;
float SCALE = 150;

//foot
int FOOT_EDGE = 8;
int FOOT1_NODE = 12;
int FOOT2_NODE = 8;
float FOOT1_LENGTH = SCALE/3;
float FOOT2_LENGTH = SCALE/4;
float[] foot1r = new float[FOOT1_NODE];
float[] foot2r = new float[FOOT2_NODE];
float footrot;

//arm
PVector armL_pos;
PVector armR_pos;
float ARM1_LENGTH = SCALE/6.8;
float ARM2_LENGTH = SCALE/6;
float HAND_LENGTH = SCALE/10.6;
int ARM_EDGE = 8;
int ARM1_NODE = 6;
int ARM2_NODE = 8;
float armrot;
float[] arm1r = new float[ARM1_NODE];
float[] arm2h = new float[ARM2_NODE];
float[] arm2w = new float[ARM2_NODE];
int HAND_NODE = 4;
int FING_NUM = 4;
int FING_NODE = 3;
int FING_EDGE = 6;
PVector[][] hand_pt = new PVector[HAND_NODE][ARM_EDGE];
PVector[][][] fng_pt = new PVector[FING_NUM][FING_NODE][FING_EDGE];

//body
int BODY_NODE = 12;
int BODY_EDGE = 4*4;
float BODY_HEIGHT = SCALE/3.2;
float BODY_WIDTH = BODY_HEIGHT;


//head
int HEAD_NODE = 20;
int HEAD_EDGE = 18;
int EYE_NODE = 6;
int EYE_EDGE = 18;
PVector[][] head_pt = new PVector[HEAD_EDGE][HEAD_NODE];


//color
color HEAD_COL = color(255);
color LINE_COL = color(50);
color EYE_COL = color(50);
color BODY_COL = color(200,50,50);



//params
float[] param_body_lr = {-0.6,-0.4,-0.2,0,0.2,0.4,0.8,0.4,0.2,0,-0.2,-0.4};
float[] param_body_fb = {0,0,0,0.1,0.2,0.3,0.5,0.6,0.4,0.3,0.2,0.1};
float[] param_body_tw = {-0.4,-0.6,-0.3,-0.2,-0.1,0,0,0,0,0,-0.1,-0.2};
float[] param_arm1_bend = {-1,-0.5,-0.2,0,0.2,0.4,1,1.5,2,1,0,-0.5};
float[] param_arm2_bend = {0,0.1,0.2,0.5,0.8,1,0.8,0.5,0.4,0.3,0.2,0.1};
//float[] param_arm1_rot = {0,};

void setup(){
  size(500,500,P3D);
  noLoop();
  frameRate(3);
  center = new PVector(width/2, height/2, 0);
  hand_pt_set();
  head_pt_set();
}

void draw(){
 background(200);
 int step = frameCount%12;
 boolean l = true;
 boolean r = false;  
 
 pushMatrix();
 translate(center.x, center.y, 0); //move center
 rotateY(-PI/2);
 //body_make(param_body_lr[step],0,param_body_tw[step]);
 //make_head();
 make_body(0.0,0.0,0.0);
 make_foot();
 //make_arm(l,1,0.3,0,0);
 //make_arm(r,-0.5,0.2,PI,0);
 //make_hat();
 //make_arm(l,param_arm1_bend[step],param_arm2_bend[step],0,0);
 //make_arm(r,param_arm1_bend[step],param_arm2_bend[step],0,0);
 popMatrix();

}




void make_mesh(int NODE_NUM, int EDGE_NUM, PVector[][] pt){
  for(int i=0; i<EDGE_NUM; i++){
    beginShape(TRIANGLE_STRIP);
    for(int j=0; j<NODE_NUM; j++){
      vertex(pt[j][i].x,pt[j][i].y,pt[j][i].z);
      if(i==EDGE_NUM-1){
        vertex(pt[j][0].x,pt[j][0].y,pt[j][0].z);
      }else{
        vertex(pt[j][i+1].x,pt[j][i+1].y,pt[j][i+1].z);
      }
    }
    endShape();
  }
  beginShape();
  for(int i=0; i<EDGE_NUM; i++){
    vertex(pt[NODE_NUM-1][i].x,pt[NODE_NUM-1][i].y,pt[NODE_NUM-1][i].z);
  }
  endShape();
}
