int FACE_EDGE = 16;
int FACE_NODE = 18;
float FACE_SIZE = 90;
PVector[][] face_pt = new PVector[FACE_EDGE][FACE_NODE];

int EYE_NODE = 5;
int EYE_EDGE = 8;
PVector[][] eye_pt = new PVector[EYE_NODE][EYE_EDGE];
PVector eyeL_center;
PVector eyeR_center;

void setup(){
  size(500, 500, P3D);
  noLoop();
  face_set();
  eye_set();
}

void draw(){

  PVector center = new PVector(width/2,height/2);
  pushMatrix();
  translate(center.x, center.y,0);
  //rotateY(PI/2);
  face_mesh();
  translate(eyeL_center.x, eyeL_center.y, eyeL_center.z);
  rotateY(-PI/16);
  rotateX(PI/20);
  fill(0,0,255);
  eye_mesh();
  popMatrix(); 
}


void face_set(){

  float[] f0 = {1, 1.03, 1.035, 1.03, 1.02, 0.98,
                  0.93, 0.9, 0.91, 0.98, 1.05, 1.1,
                  1.1, 1.07, 1.01, 0.94, 0.9, 0.88}; 

  float[] f1 = {1, 1.03, 1.035, 1.03, 1.02, 0.98,
                  0.93, 0.9, 0.9, 0.98, 1.05, 1.1,
                  1.1, 1.06, 1.01, 0.94, 0.9, 0.88};
                  
  float[] f2 = {1, 1.03, 1.035, 1.03, 1.02, 0.98,
                  0.93, 0.9, 0.91, 0.98, 1.05, 1.08,
                  1.09, 1.05, 1.0, 0.94, 0.89, 0.88};
                  
  float[] f3 = {1, 1.027, 1.035, 1.03, 1.01, 0.98,
                  0.935, 0.9, 0.91, 0.976, 1.035, 1.055,
                  1.05, 1.025, 0.98, 0.93, 0.89, 0.88};                                     
                  
  float[] f4 = {1, 1.027, 1.035, 1.028, 1.0, 0.97,
                  0.93, 0.91, 0.91, 0.95, 0.975, 0.98,
                  0.97, 0.97, 0.95, 0.93, 0.89, 0.88};  
 
  float[] f5 = {1, 1.023, 1.03, 1.028, 1.015, 0.99,
                 0.973, 0.967, 0.965, 0.97, 0.97, 0.97,
                 0.96, 0.96, 0.93, 0.92, 0.88, 0.88};   
                                 
  float[] f6 = {1, 1.017, 1.023, 1.02, 1.01, 0.99,
                 0.98, 0.98, 0.974, 0.963, 0.96, 0.95,
                 0.955, 0.932, 0.92, 0.9, 0.88, 0.88};                                                  
                  
  float[] f7 = {1, 1.01, 1.011, 1.02, 1.01, 1,
                 0.99, 0.98, 0.97, 0.96, 0.95, 0.94,
                 0.93, 0.92, 0.9, 0.88, 0.88, 0.88};               
                 
  float[] f8 = {1, 1, 1.01, 1.02, 1.01, 1,
                 0.99, 0.98, 0.97, 0.96, 0.95, 0.94,
                 0.93, 0.92, 0.9, 0.88, 0.88, 0.88};    
                 
  float[][] r = {f0, f1, f2, f3, f4, f5, f6, f7, f8, f7, 
                    f6, f5, f4, f3, f2, f1};

  float step, x1, x2, x3;
  
  for(int i=0; i<FACE_EDGE; i++){
    for(int j=0; j<FACE_NODE; j++){
      //calc step
      float t = (1.0/(FACE_NODE-1))*j;
      x1 = 3 * FACE_NODE/2 * t * pow((1-t),2);
      x2 = 3 * FACE_NODE/2 * pow(t,2) * (1-t);
      x3 = (FACE_NODE-1) * pow(t,3);
      step = x1 + x2 + x3;
      //set points
      float thita = PI - step * PI/(FACE_NODE-1);
      float phi = i*PI/8;
      float z = FACE_SIZE * r[i][j] * sin(thita) * cos(phi);
      float x = FACE_SIZE * r[i][j] * sin(thita) * sin(phi);
      float y = FACE_SIZE * r[i][j] * cos(thita);
      face_pt[i][j] = new PVector(x,y,z);
    }
  }
  //eye_pos
  float ePosL_x = (face_pt[14][7].x + face_pt[15][7].x)/2.5;
  float ePosL_y = (face_pt[15][7].y + face_pt[15][8].y)/2;
  float ePosL_z = face_pt[15][7].z; 
  float ePosR_x = (face_pt[1][7].x + face_pt[2][7].x)/2.5;
  float ePosR_y = (face_pt[1][7].y + face_pt[1][8].y)/2;
  float ePosR_z = face_pt[1][7].z;
  eyeL_center = new PVector(ePosL_x, ePosL_y, ePosL_z);
  eyeR_center = new PVector(ePosR_x, ePosR_y, ePosR_z);  
}

void face_mesh(){
  beginShape(TRIANGLE_STRIP);
  for(int i=0; i<FACE_EDGE; i++){
    for(int j=0; j<FACE_NODE; j++){
      if(i==FACE_EDGE-1){
        vertex(face_pt[i][j].x,face_pt[i][j].y,face_pt[i][j].z);
        vertex(face_pt[0][j].x,face_pt[0][j].y,face_pt[0][j].z);
      }else{        
        vertex(face_pt[i][j].x,face_pt[i][j].y,face_pt[i][j].z);
        vertex(face_pt[i+1][j].x,face_pt[i+1][j].y,face_pt[i+1][j].z);
      }
    }
  }
  endShape(CLOSE);
}


void eye_set(){
  //float[] r = {FACE_SIZE/4,FACE_SIZE/4,FACE_SIZE/5,FACE_SIZE/8,0};
  float r;
  float size = FACE_SIZE/4;
  float thick;
  for(int i=0; i<EYE_NODE; i++){
    float div = pow(i,2);
    r = FACE_SIZE/(4+div);
    if(i==EYE_NODE-1){r = 0;}
    thick = i * 10/(i+1);
    for(int j=0; j<EYE_EDGE; j++){
      float plot = j * TWO_PI/EYE_EDGE;
      float x = r * cos(plot);
      float y = r * sin(plot);
      eye_pt[i][j] = new PVector(x,y,thick);      
    }
  }
}

void eye_mesh(){  
  beginShape(TRIANGLE_STRIP);
  for(int i=0; i<EYE_NODE; i++){
    for(int j=0; j<EYE_EDGE; j++){
      if(i!=EYE_NODE-1){
        vertex(eye_pt[i][j].x,eye_pt[i][j].y,eye_pt[i][j].z);
        vertex(eye_pt[i+1][j].x,eye_pt[i+1][j].y,eye_pt[i+1][j].z);
        if(j==EYE_EDGE-1){
          vertex(eye_pt[i][0].x,eye_pt[i][0].y,eye_pt[i][0].z);
        }
      }
    }
  }
  endShape(CLOSE);
}
